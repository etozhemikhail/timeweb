pipeline {
    agent any

    parameters {
        string(name: 'nexusArchiveUrl', defaultValue: '', description: 'Link to Nexus archive')
    }

    stages {
        stage('Extract values.yaml') {
            steps {
                script {
                    unarchive mapping: ['*.zip' : '']
                    def values = readYaml file: 'values.yaml'
                    def apps = values.apps
                    def containers = apps.containers
                }
            }
        }

        stage('Generate parameters') {
            steps {
                script {
                    def params = [:]
                    dir('helms') {
                        def dirs = findFiles(glob: '*/')
                        dirs.each { dir ->
                            def appName = dir.name
                            params["url-${appName}"] = string(name: "url-${appName}", defaultValue: '', description: "URL for ${appName}")
                            params["deploy-url-${appName}"] = booleanParam(name: "deploy-url-${appName}", defaultValue: false, description: "Deploy ${appName}?")
                        }
                    }
                    // You can't use the `properties` step here. Instead, you can use the `parameters` directive to define parameters for your pipeline.
                }
            }
        }

        stage('Deploy application') {
            steps {
                script {
                    helmDeploy(
                        charts: 'helms/*',
                        values: [
                            apps: [
                                name: "${apps.name}",
                                containers: containers.collect { container ->
                                    [
                                        name: container.name,
                                        image: container.image
                                    ]
                                }
                            ]
                        ],
                        set: [
                            "url-app1=${url-app1}",
                            "url-app2=${url-app2}",
                            // ...
                        ]
                    )
                }
            }
        }
    }
}